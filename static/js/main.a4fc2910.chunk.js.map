{"version":3,"sources":["bll/form-reducer.ts","Contact.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","Contact.module.css"],"names":["addToCartAC","form","type","initialState","firstName","lastName","email","data","validate","values","errors","length","test","Contact","dispatch","useDispatch","useState","Date","startDate","setStartDate","formik","useFormik","initialValues","onSubmit","console","log","handleSubmit","className","style","blockContainer","htmlFor","id","name","onChange","handleChange","value","link","selected","date","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a4fc2910.chunk.js","sourcesContent":["export type dataType = {\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    data: string\r\n}\r\nexport type initialStateType = {\r\n    form: dataType\r\n\r\n}\r\nexport const addToCartAC = (form: dataType) => ({type: 'ADD_TO_CART', form} as const)\r\nexport  type AddCartType = ReturnType<typeof addToCartAC>\r\nexport type ActionsType = AddCartType\r\nconst initialState: initialStateType = {\r\n    form: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        data: ''\r\n    },\r\n\r\n}\r\n\r\nexport const formReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART': {\r\n            return {\r\n                ...state,\r\n                form: {\r\n                    firstName: action.form.firstName,\r\n                    lastName: action.form.lastName,\r\n                    email: action.form.email,\r\n                    data: action.form.data\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport style from './Contact.module.css'\r\nimport { useFormik } from 'formik';\r\nimport {useDispatch} from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {addToCartAC, dataType} from \"./bll/form-reducer\";\r\n\r\ntype FormikErrorType = {\r\n    firstName?:string\r\n    lastName?: string\r\n    email?: string\r\n}\r\n\r\nconst validate = (values: { firstName: string | any[]; lastName: string | any[]; email: string; }) => {\r\n\r\n    const errors:FormikErrorType = {\r\n\r\n    };\r\n    if (!values.firstName) {\r\n        errors.firstName = 'Required';\r\n    } else if (values.firstName.length > 10) {\r\n        errors.firstName = 'Must be 10 characters or less';\r\n    }\r\n\r\n    if (!values.lastName) {\r\n        errors.lastName = 'Required';\r\n    } else if (values.lastName.length > 10) {\r\n        errors.lastName = 'Must be 10 characters or less';\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nconst Contact = ( ) => {\r\n    const dispatch = useDispatch()\r\n    const [startDate, setStartDate] = useState<Date | any>(new Date()) ;\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            data: startDate,\r\n        },\r\n        validate,\r\n        onSubmit: (values:dataType) => {\r\n            const {email, firstName, lastName, data}=values\r\n            dispatch(addToCartAC({\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                data\r\n            }))\r\n            console.log(  dispatch(  dispatch(addToCartAC({\r\n                firstName,\r\n                lastName,\r\n                email,\r\n                data\r\n            }))))\r\n            // alert(JSON.stringify(values, null, 2));\r\n        },\r\n    });\r\n    return ( <form onSubmit={formik.handleSubmit} className={style.blockContainer}>\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.firstName}\r\n            />\r\n            {formik.errors.firstName ? <div className={style.link}>{formik.errors.firstName}</div> : null}\r\n\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.lastName}\r\n            />\r\n            {formik.errors.lastName ? <div className={style.link}>{formik.errors.lastName}</div> : null}\r\n\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n            />\r\n            {formik.errors.email ? <div className={style.link}>{formik.errors.email}</div> : null}\r\n\r\n            <button type=\"submit\">Submit</button>\r\n            <DatePicker selected={startDate} onChange={(date:Date) => setStartDate(date)} />\r\n        </form>\r\n\r\n    );\r\n};\r\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport Contact from \"./Contact\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Contact/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {formReducer} from \"./form-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockContainer\":\"Contact_blockContainer__1TzjQ\",\"link\":\"Contact_link__1tCmY\"};"],"sourceRoot":""}